// Code generated by MockGen. DO NOT EDIT.
// Source: ./upload.go

// Package cachemocks is a generated GoMock package.
package cachemocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/NotFound1911/filestore/service/upload/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockChunkCache is a mock of ChunkCache interface.
type MockChunkCache struct {
	ctrl     *gomock.Controller
	recorder *MockChunkCacheMockRecorder
}

// MockChunkCacheMockRecorder is the mock recorder for MockChunkCache.
type MockChunkCacheMockRecorder struct {
	mock *MockChunkCache
}

// NewMockChunkCache creates a new mock instance.
func NewMockChunkCache(ctrl *gomock.Controller) *MockChunkCache {
	mock := &MockChunkCache{ctrl: ctrl}
	mock.recorder = &MockChunkCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChunkCache) EXPECT() *MockChunkCacheMockRecorder {
	return m.recorder
}

// Del mocks base method.
func (m *MockChunkCache) Del(ctx context.Context, uploadId int64, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Del", ctx, uploadId, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Del indicates an expected call of Del.
func (mr *MockChunkCacheMockRecorder) Del(ctx, uploadId, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Del", reflect.TypeOf((*MockChunkCache)(nil).Del), ctx, uploadId, id)
}

// Get mocks base method.
func (m *MockChunkCache) Get(ctx context.Context, uploadId int64, id int) (domain.Chunk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, uploadId, id)
	ret0, _ := ret[0].(domain.Chunk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockChunkCacheMockRecorder) Get(ctx, uploadId, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockChunkCache)(nil).Get), ctx, uploadId, id)
}

// GetChunks mocks base method.
func (m *MockChunkCache) GetChunks(ctx context.Context, uploadId int64) ([]domain.Chunk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChunks", ctx, uploadId)
	ret0, _ := ret[0].([]domain.Chunk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChunks indicates an expected call of GetChunks.
func (mr *MockChunkCacheMockRecorder) GetChunks(ctx, uploadId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChunks", reflect.TypeOf((*MockChunkCache)(nil).GetChunks), ctx, uploadId)
}

// Set mocks base method.
func (m *MockChunkCache) Set(ctx context.Context, c domain.Chunk) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockChunkCacheMockRecorder) Set(ctx, c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockChunkCache)(nil).Set), ctx, c)
}
